
# bind "unix://#{Rails.root}/tmp/sockets/puma.sock"

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log error;
pid /var/log/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;
  keepalive_timeout  65;
  include /etc/nginx/conf.d/*.conf;

  upstream myapp {
    server unix:///myapp/tmp/sockets/puma.sock;
  }


  # health check
  # server {
  #   listen 80;
  #   listen [::]:80;
  #   root   /usr/share/nginx/html;

  #   location / {
  #     # empty_gif というモジュールで 1x1 の透過 gif を返します
  #     empty_gif;
  #     access_log off;
  #     break;
  #   }
  # }


  server {
    # listen 80 default_server;
    listen 80 default_server;
    listen [::]:80 default_server;
    # server_name localhost;
    server_name _;

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    root /myapp/public;
    
    location /api/v1 {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass_request_headers on; 
      proxy_pass http://myapp;
    }

    client_max_body_size 100m;
    keepalive_timeout 5;
  }
}


